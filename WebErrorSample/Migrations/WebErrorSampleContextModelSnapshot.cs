// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebErrorSample.DAL;

namespace WebErrorSample.Migrations
{
    [DbContext(typeof(WebErrorSampleContext))]
    partial class WebErrorSampleContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebErrorSample.DAL.ChildEntity", b =>
                {
                    b.Property<int>("ChildEntityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChildName");

                    b.Property<int>("ParentEntityId");

                    b.HasKey("ChildEntityId");

                    b.HasIndex("ParentEntityId");

                    b.ToTable("Children");

                    b.HasData(
                        new { ChildEntityId = 1, ChildName = "Child 1", ParentEntityId = 1 },
                        new { ChildEntityId = 2, ChildName = "Child 2", ParentEntityId = 1 },
                        new { ChildEntityId = 3, ChildName = "Child 3", ParentEntityId = 1 },
                        new { ChildEntityId = 4, ChildName = "Child 4", ParentEntityId = 1 },
                        new { ChildEntityId = 5, ChildName = "Child 5", ParentEntityId = 1 },
                        new { ChildEntityId = 6, ChildName = "Child 6", ParentEntityId = 2 },
                        new { ChildEntityId = 7, ChildName = "Child 7", ParentEntityId = 2 },
                        new { ChildEntityId = 8, ChildName = "Child 8", ParentEntityId = 2 },
                        new { ChildEntityId = 9, ChildName = "Child 9", ParentEntityId = 2 },
                        new { ChildEntityId = 10, ChildName = "Child 10", ParentEntityId = 2 },
                        new { ChildEntityId = 11, ChildName = "Child 11", ParentEntityId = 3 },
                        new { ChildEntityId = 12, ChildName = "Child 12", ParentEntityId = 3 },
                        new { ChildEntityId = 13, ChildName = "Child 13", ParentEntityId = 3 },
                        new { ChildEntityId = 14, ChildName = "Child 14", ParentEntityId = 3 },
                        new { ChildEntityId = 15, ChildName = "Child 15", ParentEntityId = 3 },
                        new { ChildEntityId = 16, ChildName = "Child 16", ParentEntityId = 4 },
                        new { ChildEntityId = 17, ChildName = "Child 17", ParentEntityId = 4 },
                        new { ChildEntityId = 18, ChildName = "Child 18", ParentEntityId = 4 },
                        new { ChildEntityId = 19, ChildName = "Child 19", ParentEntityId = 4 },
                        new { ChildEntityId = 20, ChildName = "Child 20", ParentEntityId = 4 },
                        new { ChildEntityId = 21, ChildName = "Child 21", ParentEntityId = 5 },
                        new { ChildEntityId = 22, ChildName = "Child 22", ParentEntityId = 5 },
                        new { ChildEntityId = 23, ChildName = "Child 23", ParentEntityId = 5 },
                        new { ChildEntityId = 24, ChildName = "Child 24", ParentEntityId = 5 },
                        new { ChildEntityId = 25, ChildName = "Child 25", ParentEntityId = 5 }
                    );
                });

            modelBuilder.Entity("WebErrorSample.DAL.ParentEntity", b =>
                {
                    b.Property<int>("ParentEntityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ParentName");

                    b.HasKey("ParentEntityId");

                    b.ToTable("Parents");

                    b.HasData(
                        new { ParentEntityId = 1, ParentName = "Parent 1" },
                        new { ParentEntityId = 2, ParentName = "Parent 2" },
                        new { ParentEntityId = 3, ParentName = "Parent 3" },
                        new { ParentEntityId = 4, ParentName = "Parent 4" },
                        new { ParentEntityId = 5, ParentName = "Parent 5" }
                    );
                });

            modelBuilder.Entity("WebErrorSample.DAL.ToyCategoryEntity", b =>
                {
                    b.Property<int>("ToyCategoryEntityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.HasKey("ToyCategoryEntityId");

                    b.ToTable("ToyCategories");

                    b.HasData(
                        new { ToyCategoryEntityId = 1, CategoryName = "Category 1" },
                        new { ToyCategoryEntityId = 2, CategoryName = "Category 2" },
                        new { ToyCategoryEntityId = 3, CategoryName = "Category 3" },
                        new { ToyCategoryEntityId = 4, CategoryName = "Category 4" },
                        new { ToyCategoryEntityId = 5, CategoryName = "Category 5" }
                    );
                });

            modelBuilder.Entity("WebErrorSample.DAL.ToyEntity", b =>
                {
                    b.Property<int>("ToyEntityId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChildEntityId");

                    b.Property<int>("ToyCategoryEntityId");

                    b.Property<string>("ToyName");

                    b.HasKey("ToyEntityId");

                    b.HasIndex("ChildEntityId")
                        .IsUnique();

                    b.HasIndex("ToyCategoryEntityId");

                    b.ToTable("Toys");

                    b.HasData(
                        new { ToyEntityId = 1, ChildEntityId = 1, ToyCategoryEntityId = 1, ToyName = "Toy 1" },
                        new { ToyEntityId = 2, ChildEntityId = 2, ToyCategoryEntityId = 2, ToyName = "Toy 2" },
                        new { ToyEntityId = 3, ChildEntityId = 3, ToyCategoryEntityId = 3, ToyName = "Toy 3" },
                        new { ToyEntityId = 4, ChildEntityId = 4, ToyCategoryEntityId = 4, ToyName = "Toy 4" },
                        new { ToyEntityId = 5, ChildEntityId = 5, ToyCategoryEntityId = 5, ToyName = "Toy 5" },
                        new { ToyEntityId = 6, ChildEntityId = 6, ToyCategoryEntityId = 1, ToyName = "Toy 6" },
                        new { ToyEntityId = 7, ChildEntityId = 7, ToyCategoryEntityId = 2, ToyName = "Toy 7" },
                        new { ToyEntityId = 8, ChildEntityId = 8, ToyCategoryEntityId = 3, ToyName = "Toy 8" },
                        new { ToyEntityId = 9, ChildEntityId = 9, ToyCategoryEntityId = 4, ToyName = "Toy 9" },
                        new { ToyEntityId = 10, ChildEntityId = 10, ToyCategoryEntityId = 5, ToyName = "Toy 10" },
                        new { ToyEntityId = 11, ChildEntityId = 11, ToyCategoryEntityId = 1, ToyName = "Toy 11" },
                        new { ToyEntityId = 12, ChildEntityId = 12, ToyCategoryEntityId = 2, ToyName = "Toy 12" },
                        new { ToyEntityId = 13, ChildEntityId = 13, ToyCategoryEntityId = 3, ToyName = "Toy 13" },
                        new { ToyEntityId = 14, ChildEntityId = 14, ToyCategoryEntityId = 4, ToyName = "Toy 14" },
                        new { ToyEntityId = 15, ChildEntityId = 15, ToyCategoryEntityId = 5, ToyName = "Toy 15" },
                        new { ToyEntityId = 16, ChildEntityId = 16, ToyCategoryEntityId = 1, ToyName = "Toy 16" },
                        new { ToyEntityId = 17, ChildEntityId = 17, ToyCategoryEntityId = 2, ToyName = "Toy 17" },
                        new { ToyEntityId = 18, ChildEntityId = 18, ToyCategoryEntityId = 3, ToyName = "Toy 18" },
                        new { ToyEntityId = 19, ChildEntityId = 19, ToyCategoryEntityId = 4, ToyName = "Toy 19" },
                        new { ToyEntityId = 20, ChildEntityId = 20, ToyCategoryEntityId = 5, ToyName = "Toy 20" },
                        new { ToyEntityId = 21, ChildEntityId = 21, ToyCategoryEntityId = 1, ToyName = "Toy 21" },
                        new { ToyEntityId = 22, ChildEntityId = 22, ToyCategoryEntityId = 2, ToyName = "Toy 22" },
                        new { ToyEntityId = 23, ChildEntityId = 23, ToyCategoryEntityId = 3, ToyName = "Toy 23" },
                        new { ToyEntityId = 24, ChildEntityId = 24, ToyCategoryEntityId = 4, ToyName = "Toy 24" },
                        new { ToyEntityId = 25, ChildEntityId = 25, ToyCategoryEntityId = 5, ToyName = "Toy 25" }
                    );
                });

            modelBuilder.Entity("WebErrorSample.DAL.ChildEntity", b =>
                {
                    b.HasOne("WebErrorSample.DAL.ParentEntity", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebErrorSample.DAL.ToyEntity", b =>
                {
                    b.HasOne("WebErrorSample.DAL.ChildEntity", "Child")
                        .WithOne("Toy")
                        .HasForeignKey("WebErrorSample.DAL.ToyEntity", "ChildEntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebErrorSample.DAL.ToyCategoryEntity", "Category")
                        .WithMany("Toys")
                        .HasForeignKey("ToyCategoryEntityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
